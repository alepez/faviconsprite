#!/bin/bash

## Change this ##

OUTPUT="faviconsprite.gif"
OUTPUT_CSS="faviconsprite.css"
ICON_SIZE="14"

## Should not change ##

TMP_DIR="._faviconsprite_tmp"

## Do not change below this line ##
###############################################################################

COLS=0
ROWS=0

function log() {
    echo $@ 1>&2
}

function beautify() {
  echo $1 | sed 's/\./_/g'
}

function download_favicon() {
  local domain="$1"
  local src="http://${domain}/favicon.ico"
  local dst="$( beautify $domain )"
  if ! wget --quiet "${src}" -O "${dst}.ico"; then {
    log "Cannot download ${src}";
    return;
  } fi
  if ! convert "${dst}.ico[0]" -resize ${ICON_SIZE}x${ICON_SIZE} "${dst}.png"; then {
    log "Unable to convert image ${dst}.ico";
    return;
  } fi
  rm "${dst}.ico"
  echo "${dst}.png"
}

function read_answer() {
  local answer;
  read answer;
  echo $answer;
}

function check_if_directory_exists() {
  if [ -e "${TMP_DIR}" ]; then {
    log "Error: $TMP_DIR directory exists. Rewrite? y/N"
    if [ "$( read_answer )" == "y" ]; then {
      rm -r "${TMP_DIR}"   
    } else {
      log "Aborting"
      exit
    } fi
  } fi
}

function generate_css() {
  echo "[class^="icon-fav"],[class*=" icon-fav"] { background-image: url("../img/faviconsprite.gif"); }"
  k=0
  c=0
  r=0
  for i in $@; do {
    let "x=-c*ICON_SIZE"
    let "y=-r*ICON_SIZE"
    position="${x}px ${y}px"
    echo ".icon-fav-$( beautify $i ) { background-position: $position; }"
    let "k++"
    let "c++"
    if [ $c -gt $ROWS ]; then c=0; let "r++"; fi
  } done
}

function generate_sprite() {
  log "Downloading"
  cd "${TMP_DIR}"
  icons=""
  for i in $@; do {
    icon=$( download_favicon "$i" )
    icons="${icons} $icon"
  } done
  log "Generating sprite"
  montage -background transparent -geometry +0+0 $icons "${OUTPUT}"
  calculate_row_col
  log "Generating css"
  generate_css $@ > "${OUTPUT_CSS}"
}

function calculate_row_col() {
  local sprite_size=$( identify "${OUTPUT}" | awk '{ print $3 }' )
  local sprite_width=$( echo $sprite_size | sed 's/x.*//' )
  local sprite_height=$( echo $sprite_size | sed 's/.*x//' )
  let "COLS=sprite_width/${ICON_SIZE}"
  let "ROWS=sprite_height/${ICON_SIZE}"
}

check_if_directory_exists

mkdir "${TMP_DIR}"

( generate_sprite $@ )

mv "${TMP_DIR}/${OUTPUT}" "${TMP_DIR}/${OUTPUT_CSS}" .

rm -r ${TMP_DIR}
